name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    paths:
      - 'src/Admitto.Api/**'
      - 'src/Admitto.Worker/**'
      - 'src/Admitto.JobRunner/**'
      - 'src/Admitto.Application/**'
      - 'src/Admitto.Domain/**'
      - 'src/Admitto.Infrastructure/**'
      - 'src/Admitto.ServiceDefaults/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/Admitto.Api/**'
      - 'src/Admitto.Worker/**'
      - 'src/Admitto.JobRunner/**'
      - 'src/Admitto.Application/**'
      - 'src/Admitto.Domain/**'
      - 'src/Admitto.Infrastructure/**'
      - 'src/Admitto.ServiceDefaults/**'
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  REGISTRY_NAME: acr${{ vars.AZURE_RESOURCE_SUFFIX }}
  REGISTRY: acr${{ vars.AZURE_RESOURCE_SUFFIX }}.azurecr.io
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [
          { name: 'api', path: 'src/Admitto.Api' },
          { name: 'worker', path: 'src/Admitto.Worker' },
#          { name: 'jobrunner', path: 'src/Admitto.JobRunner' }
        ]
#    outputs:
#      jobrunner_digest: ${{ steps.jobrunner_digest.outputs.digest }}
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}

    - name: Login to ACR
      run: |
        az acr login --name ${{ env.REGISTRY_NAME }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/admitto-${{ matrix.project.name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ github.run_number }}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ matrix.project.path }}/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Compose immutable image reference
      id: imm
      run: echo "IMMUTABLE_IMAGE=${{ env.REGISTRY }}/admitto-${{ matrix.project.name }}@${{ steps.build.outputs.digest }}" >> $GITHUB_ENV
      
    # Save jobrunner digest for later use
#    - name: Save JobRunner digest
#      if: matrix.project.name == 'jobrunner'
#      id: jobrunner_digest
#      run: echo "digest=${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT
      
      # Deploy only non-jobrunner images
    - name: Deploy new revision to ACA (pinned by digest)
      if: matrix.project.name != 'jobrunner'
      run: |
        az containerapp update \
          -g ${{ vars.AZURE_RESOURCE_GROUP }} \
          -n app-admitto-${{ matrix.project.name }}-${{ vars.AZURE_RESOURCE_SUFFIX }} \
          --image ${{ env.IMMUTABLE_IMAGE }} \
          --revision-suffix build-${{ github.run_number }}

#  deploy-jobrunner-instances:
#    runs-on: ubuntu-latest
#    needs: build-and-push
#    if: success()
#    strategy:
#      matrix:
#        job: [
#          { name: 'expired-orders', env: 'JOB_NAME=ExpiredOrders' },
#          { name: 'email-reminders', env: 'JOB_NAME=EmailReminders' }
#        ]
# 
#    steps:
#    - name: Login to Azure
#      uses: azure/login@v2
#      with:
#        client-id: ${{ secrets.AZURE_CLIENT_ID }}
#        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#
#    - name: Get jobrunner image
#      id: image
#      run: |
#        echo "JOBRUNNER_IMAGE=${{ env.REGISTRY }}/admitto-jobrunner@${{ needs.build-and-push.outputs.jobrunner_digest }}" >> $GITHUB_ENV
#
#    - name: Deploy jobrunner instance
#      run: |
#        az containerapp update \
#          -g ${{ vars.AZURE_RESOURCE_GROUP }} \
#          -n app-admitto-jobrunner-${{ matrix.job.name }}-${{ vars.AZURE_RESOURCE_SUFFIX }} \
#          --image ${{ env.JOBRUNNER_IMAGE }} \
#          --revision-suffix build-${{ github.run_number }} \
#          --set-env-vars "${{ matrix.job.env }}"