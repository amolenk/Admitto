<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/infra/main.bicep">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/infra/main.bicep" />
              <option name="originalContent" value="targetScope = 'subscription'&#10;&#10;@minLength(1)&#10;@maxLength(64)&#10;@description('Name of the environment that can be used as part of naming resource convention, the name of the resource group for your application will use this name, prefixed with rg-')&#10;param environmentName string&#10;&#10;@minLength(1)&#10;@description('The location used for all deployed resources')&#10;param location string&#10;&#10;@description('Id of the user or app to assign application roles')&#10;param principalId string = ''&#10;&#10;@metadata({azd: {&#10;  type: 'generate'&#10;  config: {length:22}&#10;  }&#10;})&#10;@secure()&#10;param postgres_password string&#10;@metadata({azd: {&#10;  type: 'generate'&#10;  config: {length:10,noNumeric:true,noSpecial:true}&#10;  }&#10;})&#10;param postgres_username string&#10;&#10;var tags = {&#10;  'azd-env-name': environmentName&#10;}&#10;&#10;resource rg 'Microsoft.Resources/resourceGroups@2022-09-01' = {&#10;  name: 'rg-${environmentName}'&#10;  location: location&#10;  tags: tags&#10;}&#10;module resources 'resources.bicep' = {&#10;  scope: rg&#10;  name: 'resources'&#10;  params: {&#10;    location: location&#10;    tags: tags&#10;    principalId: principalId&#10;  }&#10;}&#10;&#10;module keyVault 'keyVault/keyVault.module.bicep' = {&#10;  name: 'keyVault'&#10;  scope: rg&#10;  params: {&#10;    location: location&#10;  }&#10;}&#10;module keyVault_roles 'keyVault-roles/keyVault-roles.module.bicep' = {&#10;  name: 'keyVault-roles'&#10;  scope: rg&#10;  params: {&#10;    keyvault_outputs_name: keyVault.outputs.name&#10;    location: location&#10;    principalId: resources.outputs.MANAGED_IDENTITY_PRINCIPAL_ID&#10;    principalType: 'ServicePrincipal'&#10;  }&#10;}&#10;module messaging 'messaging/messaging.module.bicep' = {&#10;  name: 'messaging'&#10;  scope: rg&#10;  params: {&#10;    location: location&#10;  }&#10;}&#10;module messaging_roles 'messaging-roles/messaging-roles.module.bicep' = {&#10;  name: 'messaging-roles'&#10;  scope: rg&#10;  params: {&#10;    location: location&#10;    messaging_outputs_name: messaging.outputs.name&#10;    principalId: resources.outputs.MANAGED_IDENTITY_PRINCIPAL_ID&#10;    principalType: 'ServicePrincipal'&#10;  }&#10;}&#10;module postgres 'postgres/postgres.module.bicep' = {&#10;  name: 'postgres'&#10;  scope: rg&#10;  params: {&#10;    administratorLogin: postgres_username&#10;    administratorLoginPassword: postgres_password&#10;    keyVaultName: keyVault.outputs.name&#10;    location: location&#10;  }&#10;}&#10;&#10;output MANAGED_IDENTITY_CLIENT_ID string = resources.outputs.MANAGED_IDENTITY_CLIENT_ID&#10;output MANAGED_IDENTITY_NAME string = resources.outputs.MANAGED_IDENTITY_NAME&#10;output AZURE_LOG_ANALYTICS_WORKSPACE_NAME string = resources.outputs.AZURE_LOG_ANALYTICS_WORKSPACE_NAME&#10;output AZURE_CONTAINER_REGISTRY_ENDPOINT string = resources.outputs.AZURE_CONTAINER_REGISTRY_ENDPOINT&#10;output AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID string = resources.outputs.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID&#10;output AZURE_CONTAINER_REGISTRY_NAME string = resources.outputs.AZURE_CONTAINER_REGISTRY_NAME&#10;output AZURE_CONTAINER_APPS_ENVIRONMENT_NAME string = resources.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_NAME&#10;output AZURE_CONTAINER_APPS_ENVIRONMENT_ID string = resources.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_ID&#10;output AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN string = resources.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN&#10;output KEYVAULT_VAULTURI string = keyVault.outputs.vaultUri&#10;output MESSAGING_SERVICEBUSENDPOINT string = messaging.outputs.serviceBusEndpoint&#10;" />
              <option name="updatedContent" value="targetScope = 'resourceGroup'&#10;&#10;@minLength(1)&#10;@maxLength(64)&#10;@description('Name of the environment that can be used as part of naming resource convention, the name of the resource group for your application will use this name, prefixed with rg-')&#10;param environmentName string&#10;&#10;@minLength(1)&#10;@description('The location used for all deployed resources')&#10;param location string&#10;&#10;@description('Id of the user or app to assign application roles')&#10;param principalId string = ''&#10;&#10;@metadata({azd: {&#10;  type: 'generate'&#10;  config: {length:22}&#10;  }&#10;})&#10;@secure()&#10;param postgres_password string&#10;@metadata({azd: {&#10;  type: 'generate'&#10;  config: {length:10,noNumeric:true,noSpecial:true}&#10;  }&#10;})&#10;param postgres_username string&#10;&#10;var tags = {&#10;  'azd-env-name': environmentName&#10;}&#10;&#10;module resources 'resources.bicep' = {&#10;  name: 'resources'&#10;  params: {&#10;    location: location&#10;    tags: tags&#10;    principalId: principalId&#10;  }&#10;}&#10;&#10;module keyVault 'keyVault/keyVault.module.bicep' = {&#10;  name: 'keyVault'&#10;  params: {&#10;    location: location&#10;  }&#10;}&#10;module keyVault_roles 'keyVault-roles/keyVault-roles.module.bicep' = {&#10;  name: 'keyVault-roles'&#10;  params: {&#10;    keyvault_outputs_name: keyVault.outputs.name&#10;    location: location&#10;    principalId: resources.outputs.MANAGED_IDENTITY_PRINCIPAL_ID&#10;    principalType: 'ServicePrincipal'&#10;  }&#10;}&#10;module messaging 'messaging/messaging.module.bicep' = {&#10;  name: 'messaging'&#10;  params: {&#10;    location: location&#10;  }&#10;}&#10;module messaging_roles 'messaging-roles/messaging-roles.module.bicep' = {&#10;  name: 'messaging-roles'&#10;  params: {&#10;    location: location&#10;    messaging_outputs_name: messaging.outputs.name&#10;    principalId: resources.outputs.MANAGED_IDENTITY_PRINCIPAL_ID&#10;    principalType: 'ServicePrincipal'&#10;  }&#10;}&#10;module postgres 'postgres/postgres.module.bicep' = {&#10;  name: 'postgres'&#10;  params: {&#10;    administratorLogin: postgres_username&#10;    administratorLoginPassword: postgres_password&#10;    keyVaultName: keyVault.outputs.name&#10;    location: location&#10;  }&#10;}&#10;&#10;output MANAGED_IDENTITY_CLIENT_ID string = resources.outputs.MANAGED_IDENTITY_CLIENT_ID&#10;output MANAGED_IDENTITY_NAME string = resources.outputs.MANAGED_IDENTITY_NAME&#10;output AZURE_LOG_ANALYTICS_WORKSPACE_NAME string = resources.outputs.AZURE_LOG_ANALYTICS_WORKSPACE_NAME&#10;output AZURE_CONTAINER_REGISTRY_ENDPOINT string = resources.outputs.AZURE_CONTAINER_REGISTRY_ENDPOINT&#10;output AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID string = resources.outputs.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID&#10;output AZURE_CONTAINER_REGISTRY_NAME string = resources.outputs.AZURE_CONTAINER_REGISTRY_NAME&#10;output AZURE_CONTAINER_APPS_ENVIRONMENT_NAME string = resources.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_NAME&#10;output AZURE_CONTAINER_APPS_ENVIRONMENT_ID string = resources.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_ID&#10;output AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN string = resources.outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN&#10;output KEYVAULT_VAULTURI string = keyVault.outputs.vaultUri&#10;output MESSAGING_SERVICEBUSENDPOINT string = messaging.outputs.serviceBusEndpoint" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>