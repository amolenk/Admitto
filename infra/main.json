{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "3788793350425674843"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The location used for all deployed resources"
      }
    },
    "postgresPassword": {
      "type": "securestring",
      "minLength": 16,
      "metadata": {
        "description": "The password for the PostgreSQL database"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "managedIdentity",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "2966738155778587496"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('mi-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "clientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').clientId]"
            },
            "name": {
              "type": "string",
              "value": "[format('mi-{0}', variables('resourceToken'))]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').principalId]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken')))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "network",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "17766214012419009636"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2024-07-01",
              "name": "[format('vnet-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.20.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "snet-aca",
                    "properties": {
                      "addressPrefix": "10.20.1.0/24",
                      "delegations": [
                        {
                          "name": "aca-delegation",
                          "properties": {
                            "serviceName": "Microsoft.App/environments"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "snet-private-endpoints",
                    "properties": {
                      "addressPrefix": "10.20.2.0/24",
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('resourceToken')))]"
            },
            "vnetName": {
              "type": "string",
              "value": "[format('vnet-{0}', variables('resourceToken'))]"
            },
            "acaSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', variables('resourceToken')), 'snet-aca')]"
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', variables('resourceToken')), 'snet-private-endpoints')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "containerRegistry",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "principalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'managedIdentity'), '2022-09-01').outputs.principalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "16372521603688019671"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "principalId": {
              "type": "string"
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-07-01",
              "name": "[replace(format('acr-{0}', variables('resourceToken')), '-', '')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', replace(format('acr-{0}', variables('resourceToken')), '-', ''))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', '')), parameters('principalId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', ''))]"
              ]
            }
          ],
          "outputs": {
            "loginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', '')), '2023-07-01').loginServer]"
            },
            "name": {
              "type": "string",
              "value": "[replace(format('acr-{0}', variables('resourceToken')), '-', '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'managedIdentity')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "principalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'managedIdentity'), '2022-09-01').outputs.principalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "3562778706705608892"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "principalId": {
              "type": "string"
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[take(format('kv-{0}', variables('resourceToken')), 24)]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[tenant().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "enableRbacAuthorization": true
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', take(format('kv-{0}', variables('resourceToken')), 24))]",
              "name": "[guid(resourceId('Microsoft.KeyVault/vaults', take(format('kv-{0}', variables('resourceToken')), 24)), parameters('principalId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', take(format('kv-{0}', variables('resourceToken')), 24))]"
              ]
            }
          ],
          "outputs": {
            "vaultUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', take(format('kv-{0}', variables('resourceToken')), 24)), '2023-07-01').vaultUri]"
            },
            "name": {
              "type": "string",
              "value": "[take(format('kv-{0}', variables('resourceToken')), 24)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'managedIdentity')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "containerAppEnvironment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "acaSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.acaSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "822447607506105969"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "acaSubnetId": {
              "type": "string"
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[format('law-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              }
            },
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2025-02-02-preview",
              "name": "[format('cae-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "properties": {
                "workloadProfiles": [
                  {
                    "workloadProfileType": "Consumption",
                    "name": "consumption"
                  }
                ],
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken'))), '2022-10-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken'))), '2022-10-01').primarySharedKey]"
                  }
                },
                "vnetConfiguration": {
                  "infrastructureSubnetId": "[parameters('acaSubnetId')]",
                  "internal": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken')))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[format('cae-{0}', variables('resourceToken'))]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken')))]"
            },
            "defaultDomain": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken'))), '2025-02-02-preview').defaultDomain]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "serviceBus",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "principalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'managedIdentity'), '2022-09-01').outputs.principalId.value]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "vnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.vnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "12828696955337032962"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "principalId": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2024-01-01",
              "name": "[take(format('sb-{0}', uniqueString(resourceGroup().id)), 50)]",
              "location": "[parameters('location')]",
              "properties": {
                "disableLocalAuth": true
              },
              "sku": {
                "name": "[parameters('sku')]"
              }
            },
            {
              "type": "Microsoft.ServiceBus/namespaces/queues",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', take(format('sb-{0}', uniqueString(resourceGroup().id)), 50), 'queue')]",
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', take(format('sb-{0}', uniqueString(resourceGroup().id)), 50))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-07-01",
              "name": "[format('pe-{0}', take(format('sb-{0}', uniqueString(resourceGroup().id)), 50))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "servicebus-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.ServiceBus/namespaces', take(format('sb-{0}', uniqueString(resourceGroup().id)), 50))]",
                      "groupIds": [
                        "namespace"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', take(format('sb-{0}', uniqueString(resourceGroup().id)), 50))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "privatelink.servicebus.windows.net",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'privatelink.servicebus.windows.net', 'servicebus-dns-vnet-link')]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-07-01",
              "name": "[format('{0}/{1}', format('pe-{0}', take(format('sb-{0}', uniqueString(resourceGroup().id)), 50)), 'servicebus-dns-group')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "servicebus-config",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}', take(format('sb-{0}', uniqueString(resourceGroup().id)), 50)))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ServiceBus/namespaces/{0}', take(format('sb-{0}', uniqueString(resourceGroup().id)), 50))]",
              "name": "[guid(resourceId('Microsoft.ServiceBus/namespaces', take(format('sb-{0}', uniqueString(resourceGroup().id)), 50)), parameters('principalId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '090c5cfd-751d-490a-894a-3ce6f1109419'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '090c5cfd-751d-490a-894a-3ce6f1109419')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', take(format('sb-{0}', uniqueString(resourceGroup().id)), 50))]"
              ]
            }
          ],
          "outputs": {
            "serviceBusEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ServiceBus/namespaces', take(format('sb-{0}', uniqueString(resourceGroup().id)), 50)), '2024-01-01').serviceBusEndpoint]"
            },
            "name": {
              "type": "string",
              "value": "[take(format('sb-{0}', uniqueString(resourceGroup().id)), 50)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'managedIdentity')]",
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "postgres",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "administratorLoginPassword": {
            "value": "[parameters('postgresPassword')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "vnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.vnetId.value]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault'), '2022-09-01').outputs.name.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "6073851406817513961"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "administratorLogin": {
              "type": "string",
              "defaultValue": "admitto_admin"
            },
            "administratorLoginPassword": {
              "type": "securestring"
            },
            "keyVaultName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers",
              "apiVersion": "2025-06-01-preview",
              "name": "[take(format('pg-{0}', uniqueString(resourceGroup().id)), 63)]",
              "location": "[parameters('location')]",
              "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "authConfig": {
                  "activeDirectoryAuth": "Disabled",
                  "passwordAuth": "Enabled"
                },
                "availabilityZone": "1",
                "backup": {
                  "backupRetentionDays": 30,
                  "geoRedundantBackup": "Disabled"
                },
                "highAvailability": {
                  "mode": "Disabled"
                },
                "network": {
                  "publicNetworkAccess": "Disabled"
                },
                "storage": {
                  "autoGrow": "Enabled",
                  "storageSizeGB": 64,
                  "tier": "P6",
                  "type": "Premium_LRS"
                },
                "version": "17"
              },
              "sku": {
                "name": "Standard_D2ds_v5",
                "tier": "GeneralPurpose"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-07-01",
              "name": "[format('pe-{0}', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "postgres-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63))]",
                      "groupIds": [
                        "postgresqlServer"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "privatelink.postgres.database.azure.com",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'privatelink.postgres.database.azure.com', 'postgres-dns-vnet-link')]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.postgres.database.azure.com')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-07-01",
              "name": "[format('{0}/{1}', format('pe-{0}', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63)), 'postgres-dns-group')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "postgres-config",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.postgres.database.azure.com')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.postgres.database.azure.com')]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63)))]"
              ]
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
              "apiVersion": "2024-08-01",
              "name": "[format('{0}/{1}', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63), 'admitto-db')]",
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63))]"
              ]
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
              "apiVersion": "2024-08-01",
              "name": "[format('{0}/{1}', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63), 'openfga-db')]",
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'connectionstrings--admitto-db')]",
              "properties": {
                "value": "[format('Host={0};Username={1};Password={2};Database=admitto-db', reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63)), '2025-06-01-preview').fullyQualifiedDomainName, parameters('administratorLogin'), parameters('administratorLoginPassword'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'connectionstrings--openfga-db')]",
              "properties": {
                "value": "[format('postgres://{0}:{1}@{2}:5432/openfga-db?sslmode=require', parameters('administratorLogin'), parameters('administratorLoginPassword'), reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63)), '2025-06-01-preview').fullyQualifiedDomainName)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', take(format('pg-{0}', uniqueString(resourceGroup().id)), 63))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[take(format('pg-{0}', uniqueString(resourceGroup().id)), 63)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyVault')]",
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openfga-app",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerAppEnvironmentId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerAppEnvironment'), '2022-09-01').outputs.id.value]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault'), '2022-09-01').outputs.name.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "managedIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'managedIdentity'), '2022-09-01').outputs.id.value]"
          },
          "acrLoginServer": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerRegistry'), '2022-09-01').outputs.loginServer.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "14176553573836488502"
            }
          },
          "parameters": {
            "acrLoginServer": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "containerAppEnvironmentId": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "managedIdentityId": {
              "type": "string"
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2025-02-02-preview",
              "name": "[format('app-openfga-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "configuration": {
                  "activeRevisionsMode": "Single",
                  "ingress": {
                    "allowInsecure": true,
                    "targetPort": 8080
                  },
                  "registries": [
                    {
                      "identity": "[parameters('managedIdentityId')]",
                      "server": "[parameters('acrLoginServer')]"
                    }
                  ],
                  "secrets": [
                    {
                      "name": "openfga-db-connection-string",
                      "keyVaultUrl": "[format('https://{0}.vault.azure.net/secrets/connectionstrings--openfga-db', parameters('keyVaultName'))]",
                      "identity": "[parameters('managedIdentityId')]"
                    }
                  ]
                },
                "environmentId": "[parameters('containerAppEnvironmentId')]",
                "template": {
                  "initContainers": [
                    {
                      "image": "[format('{0}/openfga:v1.9.5', parameters('acrLoginServer'))]",
                      "name": "openfga-migrate",
                      "command": [
                        "/openfga",
                        "migrate"
                      ],
                      "env": [
                        {
                          "name": "OPENFGA_DATASTORE_ENGINE",
                          "value": "postgres"
                        },
                        {
                          "name": "OPENFGA_DATASTORE_URI",
                          "secretRef": "openfga-db-connection-string"
                        }
                      ]
                    }
                  ],
                  "containers": [
                    {
                      "image": "[format('{0}/openfga:v1.9.5', parameters('acrLoginServer'))]",
                      "name": "openfga",
                      "command": [
                        "/openfga",
                        "run"
                      ],
                      "env": [
                        {
                          "name": "OPENFGA_DATASTORE_ENGINE",
                          "value": "postgres"
                        },
                        {
                          "name": "OPENFGA_DATASTORE_URI",
                          "secretRef": "openfga-db-connection-string"
                        }
                      ],
                      "resources": {
                        "cpu": "[json('0.5')]",
                        "memory": "1Gi"
                      }
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  }
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[format('app-openfga-{0}', variables('resourceToken'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'containerAppEnvironment')]",
        "[resourceId('Microsoft.Resources/deployments', 'containerRegistry')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVault')]",
        "[resourceId('Microsoft.Resources/deployments', 'managedIdentity')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "admitto-api-app",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerAppEnvironmentId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerAppEnvironment'), '2022-09-01').outputs.id.value]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault'), '2022-09-01').outputs.name.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "managedIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'managedIdentity'), '2022-09-01').outputs.id.value]"
          },
          "acrLoginServer": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerRegistry'), '2022-09-01').outputs.loginServer.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "2223257975013773571"
            }
          },
          "parameters": {
            "acrLoginServer": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "containerAppEnvironmentId": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "managedIdentityId": {
              "type": "string"
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2025-02-02-preview",
              "name": "[format('app-admitto-api-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "configuration": {
                  "activeRevisionsMode": "Single",
                  "ingress": {
                    "external": true,
                    "targetPort": 8080,
                    "allowInsecure": false
                  },
                  "registries": [
                    {
                      "identity": "[parameters('managedIdentityId')]",
                      "server": "[parameters('acrLoginServer')]"
                    }
                  ],
                  "runtime": {
                    "dotnet": {
                      "autoConfigureDataProtection": true
                    }
                  }
                },
                "environmentId": "[parameters('containerAppEnvironmentId')]",
                "template": {
                  "containers": [
                    {
                      "image": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
                      "name": "admitto-api",
                      "resources": {
                        "cpu": "[json('0.5')]",
                        "memory": "1Gi"
                      }
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  }
                }
              }
            }
          ],
          "outputs": {
            "url": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', format('app-admitto-api-{0}', variables('resourceToken'))), '2025-02-02-preview').configuration.ingress.fqdn)]"
            },
            "name": {
              "type": "string",
              "value": "[format('app-admitto-api-{0}', variables('resourceToken'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'containerAppEnvironment')]",
        "[resourceId('Microsoft.Resources/deployments', 'containerRegistry')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVault')]",
        "[resourceId('Microsoft.Resources/deployments', 'managedIdentity')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "admitto-worker-app",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerAppEnvironmentId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerAppEnvironment'), '2022-09-01').outputs.id.value]"
          },
          "containerAppEnvironmentDomain": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerAppEnvironment'), '2022-09-01').outputs.defaultDomain.value]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault'), '2022-09-01').outputs.name.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "managedIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'managedIdentity'), '2022-09-01').outputs.id.value]"
          },
          "managedIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'managedIdentity'), '2022-09-01').outputs.clientId.value]"
          },
          "acrLoginServer": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerRegistry'), '2022-09-01').outputs.loginServer.value]"
          },
          "openFgaAppName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'openfga-app'), '2022-09-01').outputs.name.value]"
          },
          "serviceBusEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'serviceBus'), '2022-09-01').outputs.serviceBusEndpoint.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "4042172080688153326"
            }
          },
          "parameters": {
            "acrLoginServer": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "containerAppEnvironmentDomain": {
              "type": "string"
            },
            "containerAppEnvironmentId": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "managedIdentityId": {
              "type": "string"
            },
            "managedIdentityClientId": {
              "type": "string"
            },
            "serviceBusEndpoint": {
              "type": "string"
            },
            "openFgaAppName": {
              "type": "string"
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2025-02-02-preview",
              "name": "[format('app-admitto-worker-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "configuration": {
                  "activeRevisionsMode": "Single",
                  "registries": [
                    {
                      "identity": "[parameters('managedIdentityId')]",
                      "server": "[parameters('acrLoginServer')]"
                    }
                  ],
                  "runtime": {
                    "dotnet": {
                      "autoConfigureDataProtection": true
                    }
                  },
                  "secrets": [
                    {
                      "name": "admitto-db-connection-string",
                      "keyVaultUrl": "[format('https://{0}.vault.azure.net/secrets/connectionstrings--admitto-db', parameters('keyVaultName'))]",
                      "identity": "[parameters('managedIdentityId')]"
                    }
                  ]
                },
                "environmentId": "[parameters('containerAppEnvironmentId')]",
                "template": {
                  "containers": [
                    {
                      "image": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
                      "name": "admitto-worker",
                      "env": [
                        {
                          "name": "AZURE_CLIENT_ID",
                          "secretRef": "[parameters('managedIdentityClientId')]"
                        },
                        {
                          "name": "ConnectionStrings__admitto-db",
                          "secretRef": "admitto-db-connection-string"
                        },
                        {
                          "name": "ConnectionStrings__messaging",
                          "value": "[parameters('serviceBusEndpoint')]"
                        },
                        {
                          "name": "services__openfga__http__0",
                          "value": "[format('http://{0}.internal.{1}:8080', parameters('openFgaAppName'), parameters('containerAppEnvironmentDomain'))]"
                        }
                      ],
                      "resources": {
                        "cpu": "[json('0.5')]",
                        "memory": "1Gi"
                      }
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  }
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[format('app-admitto-worker-{0}', variables('resourceToken'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'containerAppEnvironment')]",
        "[resourceId('Microsoft.Resources/deployments', 'containerRegistry')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVault')]",
        "[resourceId('Microsoft.Resources/deployments', 'managedIdentity')]",
        "[resourceId('Microsoft.Resources/deployments', 'openfga-app')]",
        "[resourceId('Microsoft.Resources/deployments', 'serviceBus')]"
      ]
    }
  ],
  "outputs": {
    "ADMITTO_API_URL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'admitto-api-app'), '2022-09-01').outputs.url.value]"
    },
    "ADMITTO_API_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'admitto-api-app'), '2022-09-01').outputs.name.value]"
    },
    "ADMITTO_WORKER_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'admitto-worker-app'), '2022-09-01').outputs.name.value]"
    },
    "CONTAINER_REGISTRY_LOGIN_SERVER": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'containerRegistry'), '2022-09-01').outputs.loginServer.value]"
    }
  }
}